name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # 変更ファイル検査ジョブ
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      should-run-tests: ${{ steps.check.outputs.should-run-tests }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check if tests are needed
        id: check
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            # PRの場合：ベースブランチとの差分を取得
            changed_files=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }})
          else
            # Pushの場合：前のコミットとの差分を取得
            changed_files=$(git diff --name-only HEAD~1 HEAD)
          fi

          echo "Changed files:"
          echo "$changed_files"

          # .cursor以外の変更があるかチェック
          non_cursor_changes=$(echo "$changed_files" | grep -v "^\.cursor" || true)

          if [ -n "$non_cursor_changes" ]; then
            echo "should-run-tests=true" >> $GITHUB_OUTPUT
            echo "🧪 アプリケーションコードに変更があります - テスト実行"
          else
            echo "should-run-tests=false" >> $GITHUB_OUTPUT
            echo "🔄 .cursorサブモジュールのみの変更 - テストスキップ"
          fi

  lint-and-test:
    runs-on: ubuntu-latest
    needs: check-changes
    if: needs.check-changes.outputs.should-run-tests == 'true'

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run TypeScript type check
        run: npm run type-check

      - name: Check formatting with Prettier
        run: npm run format:check

      - name: Build project
        run: npm run build
